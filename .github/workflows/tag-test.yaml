name: Performance Test against Tags
on:
  workflow_dispatch:
    inputs:
      startTag:
        description: 'Tag to begin with'
        required: true
        default: '5.9.2'
        type: string
      endTag:
        description: 'Tag to end with'
        required: false
        type: string
        default: '5.8.1'

jobs:
  determine-tag-range:
    runs-on: ubuntu-latest
    outputs:
      taglist: ${{ steps.taglist.outputs.processTags }}
    steps:
      - name: Get the Repo
        uses: actions/checkout@v2
      - name: Verify tags
        run: |
          git fetch --unshallow --tags
          git tag -l
          if [ ! $(git tag -l "${{ github.event.inputs.startTag }}") ]; then
            echo "::error::The start tag you've requested does not exist. Verify the tag you've requested - ${{ github.event.inputs.startTag }} - exists."
            exit 1
          fi

          if [ ! $(git tag -l "${{ github.event.inputs.endTag }}") ]; then
            echo "::error::The end tag you've requested does not exist. Verify the tag you've requested - ${{ github.event.inputs.startTag }} -  exists."
            exit 1
          fi
      - name: determine direction
        id: determineDirection
        run: |
          begin=$(printf '%s\n%s\n' "${{ github.event.inputs.startTag }}" "${{ github.event.inputs.endTag }}" | sort -V | head -n 1)
          if [[ "${begin}" == "${{ github.event.inputs.startTag }}" ]]; then
            start="${{ github.event.inputs.startTag }}"
            end="${{ github.event.inputs.endTag }}"
          else
            start="${{ github.event.inputs.endTag }}"
            end="${{ github.event.inputs.startTag }}"
          fi
          echo "::notice::You told me to start with ${{ github.event.inputs.startTag }}"
          echo "::notice::I'm going to start with ${start}"
          echo "::set-output name=startWith::${start}"
          echo "::notice::You told me to end with ${{ github.event.inputs.endTag }}"
          echo "::notice::I'm going to end with ${end}"
          echo "::set-output name=endWith::${end}"

      - name: get tag list
        id: taglist
        run: |
          start="${{ steps.determineDirection.outputs.startWith }}"
          end="${{ steps.determineDirection.outputs.endWith }}"
          additionalTags=$(git tag -l | sed -n "/${start}/,/${end}/p");
          additionalTags=$(echo "${additionalTags}" | sed '1s/^/[/; $!s/$/,/; $s/$/]/')
          echo "::notice::Converted multitline to JSONarray: ${additionalTags}"
          #additionalTags="${additionalTags//'%'/'%25'}"
          #additionalTags="${additionalTags//$'\n'/'%0A'}"
          #additionalTags="${additionalTags//$'\r'/'%0D'}"
          echo "::set-output name=processTags::${additionalTags}"
          #echo "additionalTags post processing: ${additionalTags}"
          #git tag -l | sed -n '/5.9.0/,/5.8.0/p'

  build-each-tag:
    needs: determine-tag-range
    runs-on: ubuntu-latest
    name: "Tag builds"
    strategy:
      fail-fast: false
      matrix:
        tag: ${{ fromJSON(needs.determine-tag-range.outputs) }}

    steps:
      - name: Get the Repo
        uses: actions/checkout@v2
      - name: fetch tags
        run: |
          git fetch --unshallow --tags
      - name: does tag exist
        run: |
          if [ ! $(git tag -l "${{ matrix.tag }}") ]; then
            echo "::error::The tag you want to activate does not exist. Verify the tag you've requested - ${{ matrix.tag }} - exists."
            exit 1
          else
            echo "::notice::The tag ${{ matrix.tag }} exists and we can continue"
          fi


