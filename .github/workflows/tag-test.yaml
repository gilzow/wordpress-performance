name: Performance Test against Tags
on:
  workflow_dispatch:
    inputs:
      startTag:
        description: 'Tag to begin with'
        required: true
        default: '5.9.2'
        type: string
      endTag:
        description: 'Tag to end with'
        required: false
        type: string
        default: '5.8.1'

env:
  GIT_EMAIL: ${{ secrets.GH_EMAIL }}
  GIT_USER: ${{ secrets.GH_USER }}
  PSHCONFIG: ".platform.app.yaml,.platform,.muplugins,wp-config.php,composer.*,.gitignore,.blackfire.yaml,wp-cli.yml"

jobs:
  determine-tag-range:
    runs-on: ubuntu-latest
    outputs:
      taglist: ${{ steps.taglist.outputs.processTags }}
    steps:
      - name: Get the Repo
        uses: actions/checkout@v2
      - name: Verify tags
        run: |
          git fetch --unshallow --tags
          git tag -l
          if [ ! $(git tag -l "${{ github.event.inputs.startTag }}") ]; then
            echo "::error::The start tag you've requested does not exist. Verify the tag you've requested - ${{ github.event.inputs.startTag }} - exists."
            exit 1
          fi

          if [ ! $(git tag -l "${{ github.event.inputs.endTag }}") ]; then
            echo "::error::The end tag you've requested does not exist. Verify the tag you've requested - ${{ github.event.inputs.startTag }} -  exists."
            exit 1
          fi
      - name: determine direction
        id: determineDirection
        run: |
          begin=$(printf '%s\n%s\n' "${{ github.event.inputs.startTag }}" "${{ github.event.inputs.endTag }}" | sort -V | head -n 1)
          if [[ "${begin}" == "${{ github.event.inputs.startTag }}" ]]; then
            start="${{ github.event.inputs.startTag }}"
            end="${{ github.event.inputs.endTag }}"
          else
            start="${{ github.event.inputs.endTag }}"
            end="${{ github.event.inputs.startTag }}"
          fi
          echo "::notice::You told me to start with ${{ github.event.inputs.startTag }}"
          echo "::notice::I'm going to start with ${start}"
          echo "::set-output name=startWith::${start}"
          echo "::notice::You told me to end with ${{ github.event.inputs.endTag }}"
          echo "::notice::I'm going to end with ${end}"
          echo "::set-output name=endWith::${end}"

      - name: get tag list
        id: taglist
        run: |
          start="${{ steps.determineDirection.outputs.startWith }}"
          end="${{ steps.determineDirection.outputs.endWith }}"
          #get the list of tags, grab our start and end tags and everything between, convert that to a JSON array
          additionalTags=$(git tag -l | sed -n "/${start}/,/${end}/p" |  jq -R -s -c 'split("\n") | map(select(length > 0))');
          #additionalTags=$(echo "${additionalTags}" | sed '1s/^/["/; $!s/$/","/; $s/$/"]/')
          echo "::notice::Converted multitline to JSONarray: ${additionalTags}"
          #additionalTags="${additionalTags//'%'/'%25'}"
          #additionalTags="${additionalTags//$'\n'/'%0A'}"
          #additionalTags="${additionalTags//$'\r'/'%0D'}"
          echo "::set-output name=processTags::${additionalTags}"
          #echo "additionalTags post processing: ${additionalTags}"
          #git tag -l | sed -n '/5.9.0/,/5.8.0/p'

  build-each-tag:
    needs: determine-tag-range
    runs-on: ubuntu-latest
    name: "Tag builds"
    strategy:
      fail-fast: false
      matrix:
        tag: ${{fromJSON(needs.determine-tag-range.outputs.tagList)}}
        #tag: ["5.8.0", "5.8.1", "5.8.2", "5.8.3", "5.9.0"]

    steps:
      - name: Get the Repo
        uses: actions/checkout@v2
      - name: fetch tags
        run: |
          git fetch --unshallow --tags
      - name: set git config
        run: |
          git config --global user.email "$GIT_EMAIL"
          git config --global user.name "$GIT_USER"

      - name: cache config files
        run: |
          echo "::notice:: The tag we'll use is ${{ matrix.tag }}"
          for item in ${PSHCONFIG//,/ }
          do
              echo "::notice::I would attempt to copy ${item}"
          done
          exit 1
          cp .platform.app.yaml ${TMPDIR}
          cp -r .platform ${TMPDIR}
          cp -r .muplugins ${TMPDIR}
          cp wp-config.php ${TMPDIR}
          cp composer.* ${TMPDIR}
          cp .gitignnore
          # add .blackfire.yaml
          # add wp-cli.yml


      - name: switch to branch
        run: |
          exit 1
          if [[ !-f "${TMPDIR}.platform.app.yaml" ]]; then
            echo "::error::platform config file isnt available"
          exit 1
          else
            echo "::notice::Config file is here and ready to go"
          fi

          git checkout -b "v${{ matrix.tag }}-test" ${{ matrix.tag }}
      - name: restore config files
        run: |
          exit 1
          if [[ ! -f ".platform.app.yaml" ]]; then
            echo "::notice::Restoring platform configuration files"
            cp "${TMPDIR}.platform.app.yaml" .
            cp -r "${TMPDIR}.platform" .
            cp -r "${TMPDIR}.muplugins" .
            find ${TMPDIR} -type f -name "composer.*" -d 1 | xargs -I {} cp "{}" .
            cp "${TMPDIR}wp-config.php" .
            git add -A
            git commit -m "Adding platform configuration files"
            git push origin
          fi

      - name: add env var to enable testing
        run: |
          exit 1
          printf "variables:\n  env:\n    PSI_TEST_ENABLED: %s\n    WP_TAG: %s\n" "true" "${{ matrix.tag }}" >> .platform.app.yaml
          git add .platform.app.yaml
          git commit -m "Adds environmental variables"
          # @todo we also need to switch the theme to an older theme since older versions will not have twentytwentytwo
          # for the last.commit : git rev-list -n 1 5.8.0



